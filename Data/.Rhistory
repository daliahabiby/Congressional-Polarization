sigma.y=runif(1), sigma.a=runif(1))}
votes.params <- c("a", "b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a")
write.model(votes.model, "votes.model.rjags")
votes.jags.out <- jags(data=votes.data, inits=votes.inits,
parameters.to.save=votes.params,
model="votes.model.rjags", n.chains=3, n.iter=1000, DIC=F)
update.out<- update(votes.jags.out, n.iter=1000, n.chains=3)
jags.out.mean <- cbind(jags.out.mean, update.out$BUGSoutput$summary[c(1:3, 13:21),1])
jags.out.se <- cbind(jags.out.se, update.out$BUGSoutput$summary[c(1:3, 13:21),2])
jags.out.2.5 <- cbind(jags.out.2.5, update.out$BUGSoutput$summary[c(1:3, 13:21),3])
jags.out.25 <- cbind(jags.out.25, update.out$BUGSoutput$summary[c(1:3, 13:21),4])
jags.out.50<- cbind(jags.out.50, update.out$BUGSoutput$summary[c(1:3, 13:21),5])
jags.out.75 <- cbind(jags.out.75, update.out$BUGSoutput$summary[c(1:3, 13:21),6])
jags.out.97.5<- cbind(jags.out.97.5, update.out$BUGSoutput$summary[c(1:3, 13:21),7])
jags.out.Rhat <- cbind(jags.out.Rhat, update.out$BUGSoutput$summary[c(1:3, 13:21),8])
jags.out.n.eff<- cbind(jags.out.n.eff, update.out$BUGSoutput$summary[c(1:3, 13:21),9])
asap.mat.a1<- cbind(asap.mat.a1, update.out$BUGSoutput$sims.array[,1,1])
asap.mat.a2<- cbind(asap.mat.a2, update.out$BUGSoutput$sims.array[,1,2])
asap.mat.a3<- cbind(asap.mat.a3, update.out$BUGSoutput$sims.array[,1,3])
asap.mat.a4<- cbind(asap.mat.a4, update.out$BUGSoutput$sims.array[,1,4])
asap.mat.a5<- cbind(asap.mat.a5, update.out$BUGSoutput$sims.array[,1,5])
asap.mat.a6<- cbind(asap.mat.a6, update.out$BUGSoutput$sims.array[,1,6])
asap.mat.a7<- cbind(asap.mat.a7, update.out$BUGSoutput$sims.array[,1,7])
asap.mat.a8<- cbind(asap.mat.a8, update.out$BUGSoutput$sims.array[,1,8])
asap.mat.a9<- cbind(asap.mat.a9, update.out$BUGSoutput$sims.array[,1,9])
asap.mat.a10<- cbind(asap.mat.a10, update.out$BUGSoutput$sims.array[,1,10])
asap.mat.a11<- cbind(asap.mat.a11, update.out$BUGSoutput$sims.array[,1,11])
asap.mat.a12<- cbind(asap.mat.a12, update.out$BUGSoutput$sims.array[,1,12])
asap.mat.a13<- cbind(asap.mat.a13, update.out$BUGSoutput$sims.array[,1,13])
asap.mat.a14<- cbind(asap.mat.a14, update.out$BUGSoutput$sims.array[,1,14])
asap.mat.a15<- cbind(asap.mat.a15, update.out$BUGSoutput$sims.array[,1,15])
asap.mat.a16<- cbind(asap.mat.a16, update.out$BUGSoutput$sims.array[,1,16])
asap.mat.a17<- cbind(asap.mat.a17, update.out$BUGSoutput$sims.array[,1,17])
asap.mat.a18<- cbind(asap.mat.a18, update.out$BUGSoutput$sims.array[,1,18])
asap.mat.a19<- cbind(asap.mat.a19, update.out$BUGSoutput$sims.array[,1,19])
asap.mat.a20<- cbind(asap.mat.a20, update.out$BUGSoutput$sims.array[,1,20])
asap.mat.a21<- cbind(asap.mat.a21, update.out$BUGSoutput$sims.array[,1,21])
}
update.out$BUGSoutput$sims.array[,1,]
names(update.out$BUGSoutput$sims.array[,1,])
names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
?data.frame
asap.mat<- data.frame(a1= asap.mat.a1, a2 = asap.mat.a2, a3 = asap.mat.a3, a4 = asap.mat.a4, a5 = asap.mat.a5, a6= asap.mat.a6, a7 = asap.mat.a7, a8= asap.mat.a8, a9= asap.mat.a9, a10 = asap.mat.a10, a11 = asap.mat.a11, a12 = asap.mat.a12, a13 = asap.mat.a13, a14= asap.mat.a14, a15 = asap.mat.a15, a16 = asap.mat.a16, a17 = asap.mat.a17, a18 = asap.mat.a18, a19 = asap.mat.a19, a20 = asap.mat.a20, a21 = asap.mat.a21)
asap.mat
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
asap.mat
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
asap.mat
update.out$BUGSoutput$sims.array[,1,]
asap.mcmc<- mcmc(asap.mat)
convergence<- superdiag(asap.mcmc, burnin = 20)
convergence
jags.out.mean <- jags.out.se <- jags.out.2.5 <- jags.out.25 <- jags.out.50<- jags.out.75 <- jags.out.97.5<- jags.out.Rhat <- jags.out.n.eff <- asap.mat.a1<- asap.mat.a2<- asap.mat.a3<- asap.mat.a4<- asap.mat.a5 <- asap.mat.a6<- asap.mat.a7<- asap.mat.a8<- asap.mat.a9 <- asap.mat.a10 <- asap.mat.a11 <- asap.mat.a12 <- asap.mat.a13 <- asap.mat.a14 <- asap.mat.a15 <- asap.mat.a16 <- asap.mat.a17 <- asap.mat.a18 <- asap.mat.a19 <- asap.mat.a20 <- asap.mat.a21 <-NULL
asap.mat.list<-list()
for (i in 1:5) {
current.votes.dat <- data.frame(votes.array[,,i])
names(current.votes.dat) <- names(votes)
counts<- current.votes.dat%>%
count(congressnumber)%>%
arrange(desc(congressnumber))
conrep<- vector()
connum_vec<- list()
for(i in 1:15){
n<- counts$n[i]
yr<- c(15:1)
conrep<- rep(yr[i], n)
connum_vec[i]<- list(conrep)
}
counts2<- current.votes.dat%>%
count(year)%>%
arrange(desc(year))
yrrep<- vector()
yr_vec<- list()
for(i in 1:30){
n<- counts2$n[i]
yr<- c(30:1)
yrrep<- rep(yr[i], n)
yr_vec[i]<- list(yrrep)
}
y<- current.votes.dat$strengthofbipartisanship
N<- length(y)
J<- length(unique(current.votes.dat$congressnumber))
elecyr<- current.votes.dat$electionyear
domestic<- current.votes.dat$domesticpolicy
year_vec<- unlist(yr_vec)
congressnum<-unlist(connum_vec)
votes.model <- function() {
for (i in 1:N){
y[i] ~ dnorm(y.hat[i], tau.y)
y.hat[i] <- a[congressnum[i]] + b1*elecyr[i] + b2*domestic[i] + b3*year_vec[i]
}
b1 ~ dnorm(0, .0001)
b2 ~ dnorm(0, .0001)
b3 ~ dnorm(0, .0001)
tau.y <- pow(sigma.y, -2)
sigma.y ~ dunif (0, 100)
for (j in 1:J){
a[j] ~ dnorm (mu.a, tau.a)
}
mu.a ~ dnorm(0, 0.0001)
tau.a <- pow(sigma.a, -2)
sigma.a ~ dunif (0, 100)
}
votes.data <- list("N","J","y","congressnum","elecyr", "domestic", "year_vec")
votes.inits <- function(){
list(a=rnorm(J), b1=rnorm(1), b2=rnorm(1), b3=rnorm(1),
sigma.y=runif(1), sigma.a=runif(1))}
votes.params <- c("a", "b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a")
write.model(votes.model, "votes.model.rjags")
votes.jags.out <- jags(data=votes.data, inits=votes.inits,
parameters.to.save=votes.params,
model="votes.model.rjags", n.chains=3, n.iter=200000, DIC=F)
update.out<- update(votes.jags.out, n.iter=200000, n.chains=3)
jags.out.mean <- cbind(jags.out.mean, update.out$BUGSoutput$summary[c(1:3, 13:21),1])
jags.out.se <- cbind(jags.out.se, update.out$BUGSoutput$summary[c(1:3, 13:21),2])
jags.out.2.5 <- cbind(jags.out.2.5, update.out$BUGSoutput$summary[c(1:3, 13:21),3])
jags.out.25 <- cbind(jags.out.25, update.out$BUGSoutput$summary[c(1:3, 13:21),4])
jags.out.50<- cbind(jags.out.50, update.out$BUGSoutput$summary[c(1:3, 13:21),5])
jags.out.75 <- cbind(jags.out.75, update.out$BUGSoutput$summary[c(1:3, 13:21),6])
jags.out.97.5<- cbind(jags.out.97.5, update.out$BUGSoutput$summary[c(1:3, 13:21),7])
jags.out.Rhat <- cbind(jags.out.Rhat, update.out$BUGSoutput$summary[c(1:3, 13:21),8])
jags.out.n.eff<- cbind(jags.out.n.eff, update.out$BUGSoutput$summary[c(1:3, 13:21),9])
asap.mat.a1<- cbind(asap.mat.a1, update.out$BUGSoutput$sims.array[,1,1])
asap.mat.a2<- cbind(asap.mat.a2, update.out$BUGSoutput$sims.array[,1,2])
asap.mat.a3<- cbind(asap.mat.a3, update.out$BUGSoutput$sims.array[,1,3])
asap.mat.a4<- cbind(asap.mat.a4, update.out$BUGSoutput$sims.array[,1,4])
asap.mat.a5<- cbind(asap.mat.a5, update.out$BUGSoutput$sims.array[,1,5])
asap.mat.a6<- cbind(asap.mat.a6, update.out$BUGSoutput$sims.array[,1,6])
asap.mat.a7<- cbind(asap.mat.a7, update.out$BUGSoutput$sims.array[,1,7])
asap.mat.a8<- cbind(asap.mat.a8, update.out$BUGSoutput$sims.array[,1,8])
asap.mat.a9<- cbind(asap.mat.a9, update.out$BUGSoutput$sims.array[,1,9])
asap.mat.a10<- cbind(asap.mat.a10, update.out$BUGSoutput$sims.array[,1,10])
asap.mat.a11<- cbind(asap.mat.a11, update.out$BUGSoutput$sims.array[,1,11])
asap.mat.a12<- cbind(asap.mat.a12, update.out$BUGSoutput$sims.array[,1,12])
asap.mat.a13<- cbind(asap.mat.a13, update.out$BUGSoutput$sims.array[,1,13])
asap.mat.a14<- cbind(asap.mat.a14, update.out$BUGSoutput$sims.array[,1,14])
asap.mat.a15<- cbind(asap.mat.a15, update.out$BUGSoutput$sims.array[,1,15])
asap.mat.a16<- cbind(asap.mat.a16, update.out$BUGSoutput$sims.array[,1,16])
asap.mat.a17<- cbind(asap.mat.a17, update.out$BUGSoutput$sims.array[,1,17])
asap.mat.a18<- cbind(asap.mat.a18, update.out$BUGSoutput$sims.array[,1,18])
asap.mat.a19<- cbind(asap.mat.a19, update.out$BUGSoutput$sims.array[,1,19])
asap.mat.a20<- cbind(asap.mat.a20, update.out$BUGSoutput$sims.array[,1,20])
asap.mat.a21<- cbind(asap.mat.a21, update.out$BUGSoutput$sims.array[,1,21])
}
avg.output<- data.frame(mean = rowMeans(jags.out.mean), sd =  rowMeans(jags.out.se), "2.5%"= rowMeans(jags.out.2.5), `25%` = rowMeans(jags.out.25), `50%` = rowMeans(jags.out.50), `75%`= rowMeans(jags.out.75), `97.5%` = rowMeans(jags.out.97.5), Rhat = rowMeans(jags.out.Rhat), n.eff = rowMeans(jags.out.n.eff))
names(avg.output)<- c("mean", "sd", "2.5%", "25%", "50%", "75%", "97.5%", "Rhat", "n.eff")
knitr::kable(avg.output,
digits = 3, caption = "Varying Intercepts Model, Abbreviated")
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
asap.mcmc<- mcmc(asap.mat)
convergence<- superdiag(asap.mcmc, burnin = 40000, plot = TRUE)
convergence$heidel
convergence
asap.mcmc
?superdiag
asap.mat
asap.mat<- as.matrix(data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21)))
asap.mat
asap.mcmc<- mcmc(asap.mat)
asap.mcmc
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
asap.mcmc<- mcmc(asap.mat)
asap.mcmc
asap.mat<- as.matrix(data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21)))
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
as.matrix(asap.mat)
asap.mcmc<- mcmc(as.matrix(asap.mat))
convergence<- superdiag(asap.mcmc, burnin = 40000)
convergence
votes2<- votes[complete.cases(votes[,19]),]
counts<- votes2%>%
count(congressnumber)%>%
arrange(desc(congressnumber))
conrep<- vector()
connum_vec<- list()
for(i in 1:15){
n<- counts$n[i]
yr<- c(15:1)
conrep<- rep(yr[i], n)
connum_vec[i]<- list(conrep)
}
counts2<- votes2%>%
count(year)%>%
arrange(desc(year))
yrrep<- vector()
yr_vec<- list()
for(i in 1:30){
n<- counts2$n[i]
yr<- c(30:1)
yrrep<- rep(yr[i], n)
yr_vec[i]<- list(yrrep)
}
y<- votes2$strengthofbipartisanship
N<- length(y)
J<- length(unique(votes2$congressnumber))
elecyr<- votes2$electionyear
domestic<- votes2$domesticpolicy
year_vec<- unlist(yr_vec)
congressnum<-unlist(connum_vec)
votes.model <- function() {
for (i in 1:N){
y[i] ~ dnorm(y.hat[i], tau.y)
y.hat[i] <- a[congressnum[i]] + b1*elecyr[i] + b2*domestic[i] + b3*year_vec[i]
}
b1 ~ dnorm(0, .0001)
b2 ~ dnorm(0, .0001)
b3 ~ dnorm(0, .0001)
tau.y <- pow(sigma.y, -2)
sigma.y ~ dunif (0, 100)
for (j in 1:J){
a[j] ~ dnorm (mu.a, tau.a)
}
mu.a ~ dnorm(0, 0.0001)
tau.a <- pow(sigma.a, -2)
sigma.a ~ dunif (0, 100)
}
votes.data <- list("N","J","y","congressnum","elecyr", "domestic", "year_vec")
votes.inits <- function(){
list(a=rnorm(J), b1=rnorm(1), b2=rnorm(1), b3=rnorm(1),
sigma.y=runif(1), sigma.a=runif(1))}
votes.params <- c("a", "b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a")
write.model(votes.model, "votes.model.rjags")
votes.jags.outsmall <- jags(data=votes.data, inits=votes.inits,
parameters.to.save=votes.params,
model="votes.model.rjags", n.chains=3, n.iter=1000, DIC=F)
update.outsmall<- update(votes.jags.outsmall, n.iter=1000, n.chains=3)
update.out$BUGSoutput$sims.array[,1,]
mcmc(update.out$BUGSoutput$sims.array[,1,])
update.outsmall$BUGSoutput$sims.array[,1,]
mcmc(update.outsmall$BUGSoutput$sims.array[,1,])
asap.mat2<- update.outsmall$BUGSoutput$sims.array[,1,]
asap.mcmc2<- mcmc(asap.mat2)
convergence<- superdiag(asap.mcmc2, burnin =)
convergence2<- superdiag(asap.mcmc2, burnin =20)
convergence2
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
asap.mat
asap.mat<- matrix(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
asap.mat
asap.mat2
class(asap.mat2)
class(asap.mat)
class(as.matrix(asap.mat))
as.matrix(asap.mat)
asap.mat2
convergence
asap.mcmc<- mcmc(as.matrix(asap.mat))
convergence<- superdiag(asap.mcmc, burnin = 40000)
convergence
convergence<- superdiag(asap.mcmc)
convergence
convergence<- superdiag(asap.mcmc, burnin = 20000)
convergence
convergence<- superdiag(asap.mcmc, plot = TRUE)
?superdiagPlot
superdiagPlot(asap.mcmc, burnin= 20000)
convergence<- superdiag(asap.mcmc)
convergence
knitr::kable(avg.output,
digits = 3, caption = "Varying Intercepts Model, Abbreviated")
convergence
knitr::kable(avg.output,
digits = 3, caption = "Varying Intercepts Model, Abbreviated")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
asap.mcmc
superdiagPlot(asap.mcmc, params= "mu.a" burnin= 20000)
superdiagPlot(asap.mcmc, params= "mu.a", burnin= 20000)
superdiagPlot(asap.mcmc, params= 1, burnin= 20000)
asap.mcmc
superdiagPlot(asap.mcmc, params= [1,], burnin= 20000)
superdiagPlot(asap.mcmc, params= c("mu.a"), burnin= 20000)
superdiagPlot(asap.mcmc, params= subset(asap.mcmc, 1), burnin= 20000)
superdiagPlot(asap.mcmc, params= FALSE, burnin= 20000)
asap.mcmc[1]
asap.mcmc[1][2]
asap.mcmc["mu.a"]
asap.mcmc[18]
asap.mcmc[,18]
superdiagPlot(asap.mcmc, params= ",18", burnin= 20000)
superdiagPlot(asap.mcmc, params= 16:21, burnin= 20000)
superdiagPlot(asap.mcmc, params= 16, burnin= 20000)
superdiagPlot(asap.mcmc, params= `1`, burnin= 20000)
superdiagPlot(asap.mcmc, params= `mu.a`, burnin= 20000)
superdiagPlot(asap.mcmc, params= `asap.mcmc$mu.a`, burnin= 20000)
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
superdiagPlot(asap.mcmc, params= asap.mcmc$`mu.a`, burnin= 20000)
superdiagPlot(asap.mcmc, params= asap.mcmc$mu.a, burnin= 20000)
superdiagPlot(asap.mcmc, params= asap.mcmc[mu.a], burnin= 20000)
asap.mcmc[mu.a]
superdiagPlot(asap.mcmc, params= asap.mcmc[3], burnin= 20000)
superdiagPlot(asap.mcmc, params=  list("b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a"), burnin= 20000)
length("b1")
superdiagPlot(asap.mcmc, params=  list("b1"), burnin= 20000)
update.out$BUGSoutput$sims.array
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(tidyverse))
suppressMessages(library(haven))
votes<- read_dta("../GOvT 670/Important Congressional Votes, 1991-2010.dta")
votes<- read_dta("../GOvT 670/Important Congressional Votes, 1991-2010.dta")
library(mice)
impvotes<-mice(votes, m = 5)
saveRDS(impvotes, file = "multipleimputedvotes.rds")
readRDS("multipleimputedvotes.rds")
#impvotes<-mice(votes, m = 5)
#saveRDS(impvotes, file = "multipleimputedvotes.rds")
micevotes<- readRDS("multipleimputedvotes.rds")
votes.mids <- lm.mids(strengthofbipartisanship ~ year+ electionyear + domesticpolicy, data=micevotes)
summary(pool(votes.mids))
votes.array <- array(NA,c(dim(votes),5))
for (i in 1:5) votes.array[,,i] <- as.matrix(complete(micevotes,i))
lapply(c("rjags", "R2jags", "coda", "superdiag", "R2WinBUGS"), library, character.only= TRUE)
jags.out.mean <- jags.out.se <- jags.out.2.5 <- jags.out.25 <- jags.out.50<- jags.out.75 <- jags.out.97.5<- jags.out.Rhat <- jags.out.n.eff <- asap.mat.a1<- asap.mat.a2<- asap.mat.a3<- asap.mat.a4<- asap.mat.a5 <- asap.mat.a6<- asap.mat.a7<- asap.mat.a8<- asap.mat.a9 <- asap.mat.a10 <- asap.mat.a11 <- asap.mat.a12 <- asap.mat.a13 <- asap.mat.a14 <- asap.mat.a15 <- asap.mat.a16 <- asap.mat.a17 <- asap.mat.a18 <- asap.mat.a19 <- asap.mat.a20 <- asap.mat.a21 <-NULL
asap.mat.list<-list()
for (i in 1:5) {
current.votes.dat <- data.frame(votes.array[,,i])
names(current.votes.dat) <- names(votes)
counts<- current.votes.dat%>%
count(congressnumber)%>%
arrange(desc(congressnumber))
conrep<- vector()
connum_vec<- list()
for(i in 1:15){
n<- counts$n[i]
yr<- c(15:1)
conrep<- rep(yr[i], n)
connum_vec[i]<- list(conrep)
}
counts2<- current.votes.dat%>%
count(year)%>%
arrange(desc(year))
yrrep<- vector()
yr_vec<- list()
for(i in 1:30){
n<- counts2$n[i]
yr<- c(30:1)
yrrep<- rep(yr[i], n)
yr_vec[i]<- list(yrrep)
}
y<- current.votes.dat$strengthofbipartisanship
N<- length(y)
J<- length(unique(current.votes.dat$congressnumber))
elecyr<- current.votes.dat$electionyear
domestic<- current.votes.dat$domesticpolicy
year_vec<- unlist(yr_vec)
congressnum<-unlist(connum_vec)
votes.model <- function() {
for (i in 1:N){
y[i] ~ dnorm(y.hat[i], tau.y)
y.hat[i] <- a[congressnum[i]] + b1*elecyr[i] + b2*domestic[i] + b3*year_vec[i]
}
b1 ~ dnorm(0, .0001)
b2 ~ dnorm(0, .0001)
b3 ~ dnorm(0, .0001)
tau.y <- pow(sigma.y, -2)
sigma.y ~ dunif (0, 100)
for (j in 1:J){
a[j] ~ dnorm (mu.a, tau.a)
}
mu.a ~ dnorm(0, 0.0001)
tau.a <- pow(sigma.a, -2)
sigma.a ~ dunif (0, 100)
}
votes.data <- list("N","J","y","congressnum","elecyr", "domestic", "year_vec")
votes.inits <- function(){
list(a=rnorm(J), b1=rnorm(1), b2=rnorm(1), b3=rnorm(1),
sigma.y=runif(1), sigma.a=runif(1))}
votes.params <- c("a", "b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a")
write.model(votes.model, "votes.model.rjags")
votes.jags.out <- jags(data=votes.data, inits=votes.inits,
parameters.to.save=votes.params,
model="votes.model.rjags", n.chains=3, n.iter=300000, DIC=F)
update.out<- update(votes.jags.out, n.iter=300000, n.chains=3)
jags.out.mean <- cbind(jags.out.mean, update.out$BUGSoutput$summary[c(1:3, 13:21),1])
jags.out.se <- cbind(jags.out.se, update.out$BUGSoutput$summary[c(1:3, 13:21),2])
jags.out.2.5 <- cbind(jags.out.2.5, update.out$BUGSoutput$summary[c(1:3, 13:21),3])
jags.out.25 <- cbind(jags.out.25, update.out$BUGSoutput$summary[c(1:3, 13:21),4])
jags.out.50<- cbind(jags.out.50, update.out$BUGSoutput$summary[c(1:3, 13:21),5])
jags.out.75 <- cbind(jags.out.75, update.out$BUGSoutput$summary[c(1:3, 13:21),6])
jags.out.97.5<- cbind(jags.out.97.5, update.out$BUGSoutput$summary[c(1:3, 13:21),7])
jags.out.Rhat <- cbind(jags.out.Rhat, update.out$BUGSoutput$summary[c(1:3, 13:21),8])
jags.out.n.eff<- cbind(jags.out.n.eff, update.out$BUGSoutput$summary[c(1:3, 13:21),9])
asap.mat.a1<- cbind(asap.mat.a1, update.out$BUGSoutput$sims.array[,1,1])
asap.mat.a2<- cbind(asap.mat.a2, update.out$BUGSoutput$sims.array[,1,2])
asap.mat.a3<- cbind(asap.mat.a3, update.out$BUGSoutput$sims.array[,1,3])
asap.mat.a4<- cbind(asap.mat.a4, update.out$BUGSoutput$sims.array[,1,4])
asap.mat.a5<- cbind(asap.mat.a5, update.out$BUGSoutput$sims.array[,1,5])
asap.mat.a6<- cbind(asap.mat.a6, update.out$BUGSoutput$sims.array[,1,6])
asap.mat.a7<- cbind(asap.mat.a7, update.out$BUGSoutput$sims.array[,1,7])
asap.mat.a8<- cbind(asap.mat.a8, update.out$BUGSoutput$sims.array[,1,8])
asap.mat.a9<- cbind(asap.mat.a9, update.out$BUGSoutput$sims.array[,1,9])
asap.mat.a10<- cbind(asap.mat.a10, update.out$BUGSoutput$sims.array[,1,10])
asap.mat.a11<- cbind(asap.mat.a11, update.out$BUGSoutput$sims.array[,1,11])
asap.mat.a12<- cbind(asap.mat.a12, update.out$BUGSoutput$sims.array[,1,12])
asap.mat.a13<- cbind(asap.mat.a13, update.out$BUGSoutput$sims.array[,1,13])
asap.mat.a14<- cbind(asap.mat.a14, update.out$BUGSoutput$sims.array[,1,14])
asap.mat.a15<- cbind(asap.mat.a15, update.out$BUGSoutput$sims.array[,1,15])
asap.mat.a16<- cbind(asap.mat.a16, update.out$BUGSoutput$sims.array[,1,16])
asap.mat.a17<- cbind(asap.mat.a17, update.out$BUGSoutput$sims.array[,1,17])
asap.mat.a18<- cbind(asap.mat.a18, update.out$BUGSoutput$sims.array[,1,18])
asap.mat.a19<- cbind(asap.mat.a19, update.out$BUGSoutput$sims.array[,1,19])
asap.mat.a20<- cbind(asap.mat.a20, update.out$BUGSoutput$sims.array[,1,20])
asap.mat.a21<- cbind(asap.mat.a21, update.out$BUGSoutput$sims.array[,1,21])
}
avg.output<- data.frame(mean = rowMeans(jags.out.mean), sd =  rowMeans(jags.out.se), "2.5%"= rowMeans(jags.out.2.5), `25%` = rowMeans(jags.out.25), `50%` = rowMeans(jags.out.50), `75%`= rowMeans(jags.out.75), `97.5%` = rowMeans(jags.out.97.5), Rhat = rowMeans(jags.out.Rhat), n.eff = rowMeans(jags.out.n.eff))
names(avg.output)<- c("mean", "sd", "2.5%", "25%", "50%", "75%", "97.5%", "Rhat", "n.eff")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
asap.mcmc<- mcmc(as.matrix(asap.mat))
convergence<- superdiag(asap.mcmc, burnin = 80000)
convergence$geweke
convergence$heidel
convergence$raftery
convergence$hellinger
plot.mat<- asap.mat[c(16:21)]
plot.mcmc<- mcmc(as.matrix(plot.mat))
convergence.plot<- superdiag(plot.mcmc, burnin = 80000, plot = TRUE)
avg.output<- data.frame(mean = rowMeans(jags.out.mean), sd =  rowMeans(jags.out.se), "2.5%"= rowMeans(jags.out.2.5), `25%` = rowMeans(jags.out.25), `75%`= rowMeans(jags.out.75), `97.5%` = rowMeans(jags.out.97.5), Rhat = rowMeans(jags.out.Rhat), n.eff = rowMeans(jags.out.n.eff))
names(avg.output)<- c("mean", "sd", "2.5%", "25%", "75%", "97.5%", "Rhat", "n.eff")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
votes<- read_dta("../GOVT 670/Important Congressional Votes, 1991-2020.dta")
votes
library(mice)
impvotes<-mice(votes, m = 5)
impvotes
summary(votes)
votes.array[,,1]
names(votes.array[,,1]<- names(votes))
names(votes.array[,,1])<- names(votes)
impvotes1<- votes.array[,,1]
names(impvotes1)<- names(votes)
impvotes1%>%
dplyr::select(strengthofbipartisanship)
as.dataframe(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
dataframe(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
data.frame(impvotes1)
votes.array[,,1]
ata.frame(votes.array[,,1])
data.frame(votes.array[,,1])
#impvotes<-mice(votes, m = 5)
#saveRDS(impvotes, file = "multipleimputedvotes.rds")
micevotes<- readRDS("multipleimputedvotes.rds")
votes.array <- array(NA,c(dim(votes),5))
for (i in 1:5) votes.array[,,i] <- as.matrix(complete(micevotes,i))
votes.array[,,1]
data.frame(votes.array[,,1])
impvotes1<- data.frame(votes.array[,,1])
names(impvotes1)<- names(votes)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
names(impvotes1)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber)%>%
summary()
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber)%>%
summarise()
summary(data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
summary(data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
data.frame(impvotes1)
impvotes1
impvotes1%>%
count(congressnumber)%>%
arrange(desc(congressnumber))
as.numeric(impvotes[c(1:57)])
as.numeric(impvotes[1])
as.numeric(impvotes1[1])
as.numeric(impvotes1$congressnumber)
votes<- read_dta("../GOVT 670/Important Congressional Votes, 1991-2020.dta")
votes
impvotes2<(as.numeric(impvotes1$strengthofbipartisanship))
impvotes2<-(as.numeric(impvotes1$strengthofbipartisanship))
impvotes2
impvotes2<-(as.numeric(impvotes1$strengthofbipartisanship), as.numeric(impvotes1$electionyear))
impvotes1$strengthofbipartisanship<- as.numeric(impvotes1$strengthofbipartisanship)
impvotes1$electionyear<- as.numeric(impvotes1$electionyear)
impvotes1$domesticpolicy<- as.numeric(impvotes1$domesticpolicy)
impvotes1$year<- as.numeric(impvotes1$year)
impvotes1$congressnumber<- as.numeric(impvotes1$congressnumber)
summary(impvotes1%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
impvotes1$strengthofbipartisanship
summary(impvotes1%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
?superdiaga
?superdiag
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
avg.output
saveRDS(avg.output, file = "avg.output.for.table")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
setwd("~/GOVT 670/Congressional-Polarization/Data")
ls -a
