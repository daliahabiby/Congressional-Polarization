convergence<- superdiag(asap.mcmc, burnin = 40000)
convergence
convergence<- superdiag(asap.mcmc)
convergence
convergence<- superdiag(asap.mcmc, burnin = 20000)
convergence
convergence<- superdiag(asap.mcmc, plot = TRUE)
?superdiagPlot
superdiagPlot(asap.mcmc, burnin= 20000)
convergence<- superdiag(asap.mcmc)
convergence
knitr::kable(avg.output,
digits = 3, caption = "Varying Intercepts Model, Abbreviated")
convergence
knitr::kable(avg.output,
digits = 3, caption = "Varying Intercepts Model, Abbreviated")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
asap.mcmc
superdiagPlot(asap.mcmc, params= "mu.a" burnin= 20000)
superdiagPlot(asap.mcmc, params= "mu.a", burnin= 20000)
superdiagPlot(asap.mcmc, params= 1, burnin= 20000)
asap.mcmc
superdiagPlot(asap.mcmc, params= [1,], burnin= 20000)
superdiagPlot(asap.mcmc, params= c("mu.a"), burnin= 20000)
superdiagPlot(asap.mcmc, params= subset(asap.mcmc, 1), burnin= 20000)
superdiagPlot(asap.mcmc, params= FALSE, burnin= 20000)
asap.mcmc[1]
asap.mcmc[1][2]
asap.mcmc["mu.a"]
asap.mcmc[18]
asap.mcmc[,18]
superdiagPlot(asap.mcmc, params= ",18", burnin= 20000)
superdiagPlot(asap.mcmc, params= 16:21, burnin= 20000)
superdiagPlot(asap.mcmc, params= 16, burnin= 20000)
superdiagPlot(asap.mcmc, params= `1`, burnin= 20000)
superdiagPlot(asap.mcmc, params= `mu.a`, burnin= 20000)
superdiagPlot(asap.mcmc, params= `asap.mcmc$mu.a`, burnin= 20000)
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
superdiagPlot(asap.mcmc, params= asap.mcmc$`mu.a`, burnin= 20000)
superdiagPlot(asap.mcmc, params= asap.mcmc$mu.a, burnin= 20000)
superdiagPlot(asap.mcmc, params= asap.mcmc[mu.a], burnin= 20000)
asap.mcmc[mu.a]
superdiagPlot(asap.mcmc, params= asap.mcmc[3], burnin= 20000)
superdiagPlot(asap.mcmc, params=  list("b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a"), burnin= 20000)
length("b1")
superdiagPlot(asap.mcmc, params=  list("b1"), burnin= 20000)
update.out$BUGSoutput$sims.array
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(tidyverse))
suppressMessages(library(haven))
votes<- read_dta("../GOvT 670/Important Congressional Votes, 1991-2010.dta")
votes<- read_dta("../GOvT 670/Important Congressional Votes, 1991-2010.dta")
library(mice)
impvotes<-mice(votes, m = 5)
saveRDS(impvotes, file = "multipleimputedvotes.rds")
readRDS("multipleimputedvotes.rds")
#impvotes<-mice(votes, m = 5)
#saveRDS(impvotes, file = "multipleimputedvotes.rds")
micevotes<- readRDS("multipleimputedvotes.rds")
votes.mids <- lm.mids(strengthofbipartisanship ~ year+ electionyear + domesticpolicy, data=micevotes)
summary(pool(votes.mids))
votes.array <- array(NA,c(dim(votes),5))
for (i in 1:5) votes.array[,,i] <- as.matrix(complete(micevotes,i))
lapply(c("rjags", "R2jags", "coda", "superdiag", "R2WinBUGS"), library, character.only= TRUE)
jags.out.mean <- jags.out.se <- jags.out.2.5 <- jags.out.25 <- jags.out.50<- jags.out.75 <- jags.out.97.5<- jags.out.Rhat <- jags.out.n.eff <- asap.mat.a1<- asap.mat.a2<- asap.mat.a3<- asap.mat.a4<- asap.mat.a5 <- asap.mat.a6<- asap.mat.a7<- asap.mat.a8<- asap.mat.a9 <- asap.mat.a10 <- asap.mat.a11 <- asap.mat.a12 <- asap.mat.a13 <- asap.mat.a14 <- asap.mat.a15 <- asap.mat.a16 <- asap.mat.a17 <- asap.mat.a18 <- asap.mat.a19 <- asap.mat.a20 <- asap.mat.a21 <-NULL
asap.mat.list<-list()
for (i in 1:5) {
current.votes.dat <- data.frame(votes.array[,,i])
names(current.votes.dat) <- names(votes)
counts<- current.votes.dat%>%
count(congressnumber)%>%
arrange(desc(congressnumber))
conrep<- vector()
connum_vec<- list()
for(i in 1:15){
n<- counts$n[i]
yr<- c(15:1)
conrep<- rep(yr[i], n)
connum_vec[i]<- list(conrep)
}
counts2<- current.votes.dat%>%
count(year)%>%
arrange(desc(year))
yrrep<- vector()
yr_vec<- list()
for(i in 1:30){
n<- counts2$n[i]
yr<- c(30:1)
yrrep<- rep(yr[i], n)
yr_vec[i]<- list(yrrep)
}
y<- current.votes.dat$strengthofbipartisanship
N<- length(y)
J<- length(unique(current.votes.dat$congressnumber))
elecyr<- current.votes.dat$electionyear
domestic<- current.votes.dat$domesticpolicy
year_vec<- unlist(yr_vec)
congressnum<-unlist(connum_vec)
votes.model <- function() {
for (i in 1:N){
y[i] ~ dnorm(y.hat[i], tau.y)
y.hat[i] <- a[congressnum[i]] + b1*elecyr[i] + b2*domestic[i] + b3*year_vec[i]
}
b1 ~ dnorm(0, .0001)
b2 ~ dnorm(0, .0001)
b3 ~ dnorm(0, .0001)
tau.y <- pow(sigma.y, -2)
sigma.y ~ dunif (0, 100)
for (j in 1:J){
a[j] ~ dnorm (mu.a, tau.a)
}
mu.a ~ dnorm(0, 0.0001)
tau.a <- pow(sigma.a, -2)
sigma.a ~ dunif (0, 100)
}
votes.data <- list("N","J","y","congressnum","elecyr", "domestic", "year_vec")
votes.inits <- function(){
list(a=rnorm(J), b1=rnorm(1), b2=rnorm(1), b3=rnorm(1),
sigma.y=runif(1), sigma.a=runif(1))}
votes.params <- c("a", "b1", "b2", "b3", "sigma.y", "sigma.a", "mu.a")
write.model(votes.model, "votes.model.rjags")
votes.jags.out <- jags(data=votes.data, inits=votes.inits,
parameters.to.save=votes.params,
model="votes.model.rjags", n.chains=3, n.iter=300000, DIC=F)
update.out<- update(votes.jags.out, n.iter=300000, n.chains=3)
jags.out.mean <- cbind(jags.out.mean, update.out$BUGSoutput$summary[c(1:3, 13:21),1])
jags.out.se <- cbind(jags.out.se, update.out$BUGSoutput$summary[c(1:3, 13:21),2])
jags.out.2.5 <- cbind(jags.out.2.5, update.out$BUGSoutput$summary[c(1:3, 13:21),3])
jags.out.25 <- cbind(jags.out.25, update.out$BUGSoutput$summary[c(1:3, 13:21),4])
jags.out.50<- cbind(jags.out.50, update.out$BUGSoutput$summary[c(1:3, 13:21),5])
jags.out.75 <- cbind(jags.out.75, update.out$BUGSoutput$summary[c(1:3, 13:21),6])
jags.out.97.5<- cbind(jags.out.97.5, update.out$BUGSoutput$summary[c(1:3, 13:21),7])
jags.out.Rhat <- cbind(jags.out.Rhat, update.out$BUGSoutput$summary[c(1:3, 13:21),8])
jags.out.n.eff<- cbind(jags.out.n.eff, update.out$BUGSoutput$summary[c(1:3, 13:21),9])
asap.mat.a1<- cbind(asap.mat.a1, update.out$BUGSoutput$sims.array[,1,1])
asap.mat.a2<- cbind(asap.mat.a2, update.out$BUGSoutput$sims.array[,1,2])
asap.mat.a3<- cbind(asap.mat.a3, update.out$BUGSoutput$sims.array[,1,3])
asap.mat.a4<- cbind(asap.mat.a4, update.out$BUGSoutput$sims.array[,1,4])
asap.mat.a5<- cbind(asap.mat.a5, update.out$BUGSoutput$sims.array[,1,5])
asap.mat.a6<- cbind(asap.mat.a6, update.out$BUGSoutput$sims.array[,1,6])
asap.mat.a7<- cbind(asap.mat.a7, update.out$BUGSoutput$sims.array[,1,7])
asap.mat.a8<- cbind(asap.mat.a8, update.out$BUGSoutput$sims.array[,1,8])
asap.mat.a9<- cbind(asap.mat.a9, update.out$BUGSoutput$sims.array[,1,9])
asap.mat.a10<- cbind(asap.mat.a10, update.out$BUGSoutput$sims.array[,1,10])
asap.mat.a11<- cbind(asap.mat.a11, update.out$BUGSoutput$sims.array[,1,11])
asap.mat.a12<- cbind(asap.mat.a12, update.out$BUGSoutput$sims.array[,1,12])
asap.mat.a13<- cbind(asap.mat.a13, update.out$BUGSoutput$sims.array[,1,13])
asap.mat.a14<- cbind(asap.mat.a14, update.out$BUGSoutput$sims.array[,1,14])
asap.mat.a15<- cbind(asap.mat.a15, update.out$BUGSoutput$sims.array[,1,15])
asap.mat.a16<- cbind(asap.mat.a16, update.out$BUGSoutput$sims.array[,1,16])
asap.mat.a17<- cbind(asap.mat.a17, update.out$BUGSoutput$sims.array[,1,17])
asap.mat.a18<- cbind(asap.mat.a18, update.out$BUGSoutput$sims.array[,1,18])
asap.mat.a19<- cbind(asap.mat.a19, update.out$BUGSoutput$sims.array[,1,19])
asap.mat.a20<- cbind(asap.mat.a20, update.out$BUGSoutput$sims.array[,1,20])
asap.mat.a21<- cbind(asap.mat.a21, update.out$BUGSoutput$sims.array[,1,21])
}
avg.output<- data.frame(mean = rowMeans(jags.out.mean), sd =  rowMeans(jags.out.se), "2.5%"= rowMeans(jags.out.2.5), `25%` = rowMeans(jags.out.25), `50%` = rowMeans(jags.out.50), `75%`= rowMeans(jags.out.75), `97.5%` = rowMeans(jags.out.97.5), Rhat = rowMeans(jags.out.Rhat), n.eff = rowMeans(jags.out.n.eff))
names(avg.output)<- c("mean", "sd", "2.5%", "25%", "50%", "75%", "97.5%", "Rhat", "n.eff")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
asap.mat<- data.frame(a1= rowMeans(asap.mat.a1), a2 = rowMeans(asap.mat.a2), a3 = rowMeans(asap.mat.a3), a4 = rowMeans(asap.mat.a4), a5 = rowMeans(asap.mat.a5), a6= rowMeans(asap.mat.a6), a7 = rowMeans(asap.mat.a7), a8= rowMeans(asap.mat.a8), a9= rowMeans(asap.mat.a9), a10 = rowMeans(asap.mat.a10), a11 = rowMeans(asap.mat.a11), a12 = rowMeans(asap.mat.a12), a13 = rowMeans(asap.mat.a13), a14= rowMeans(asap.mat.a14), a15 = rowMeans(asap.mat.a15), a16 = rowMeans(asap.mat.a16), a17 = rowMeans(asap.mat.a17), a18 = rowMeans(asap.mat.a18), a19 = rowMeans(asap.mat.a19), a20 = rowMeans(asap.mat.a20), a21 = rowMeans(asap.mat.a21))
names(asap.mat) <- names(as.data.frame(update.out$BUGSoutput$sims.array[,1,]))
asap.mcmc<- mcmc(as.matrix(asap.mat))
convergence<- superdiag(asap.mcmc, burnin = 80000)
convergence$geweke
convergence$heidel
convergence$raftery
convergence$hellinger
plot.mat<- asap.mat[c(16:21)]
plot.mcmc<- mcmc(as.matrix(plot.mat))
convergence.plot<- superdiag(plot.mcmc, burnin = 80000, plot = TRUE)
avg.output<- data.frame(mean = rowMeans(jags.out.mean), sd =  rowMeans(jags.out.se), "2.5%"= rowMeans(jags.out.2.5), `25%` = rowMeans(jags.out.25), `75%`= rowMeans(jags.out.75), `97.5%` = rowMeans(jags.out.97.5), Rhat = rowMeans(jags.out.Rhat), n.eff = rowMeans(jags.out.n.eff))
names(avg.output)<- c("mean", "sd", "2.5%", "25%", "75%", "97.5%", "Rhat", "n.eff")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
votes<- read_dta("../GOVT 670/Important Congressional Votes, 1991-2020.dta")
votes
library(mice)
impvotes<-mice(votes, m = 5)
impvotes
summary(votes)
votes.array[,,1]
names(votes.array[,,1]<- names(votes))
names(votes.array[,,1])<- names(votes)
impvotes1<- votes.array[,,1]
names(impvotes1)<- names(votes)
impvotes1%>%
dplyr::select(strengthofbipartisanship)
as.dataframe(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
dataframe(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
data.frame(impvotes1)
votes.array[,,1]
ata.frame(votes.array[,,1])
data.frame(votes.array[,,1])
#impvotes<-mice(votes, m = 5)
#saveRDS(impvotes, file = "multipleimputedvotes.rds")
micevotes<- readRDS("multipleimputedvotes.rds")
votes.array <- array(NA,c(dim(votes),5))
for (i in 1:5) votes.array[,,i] <- as.matrix(complete(micevotes,i))
votes.array[,,1]
data.frame(votes.array[,,1])
impvotes1<- data.frame(votes.array[,,1])
names(impvotes1)<- names(votes)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship)
names(impvotes1)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber)
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber)%>%
summary()
data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber)%>%
summarise()
summary(data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
summary(data.frame(impvotes1)%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
data.frame(impvotes1)
impvotes1
impvotes1%>%
count(congressnumber)%>%
arrange(desc(congressnumber))
as.numeric(impvotes[c(1:57)])
as.numeric(impvotes[1])
as.numeric(impvotes1[1])
as.numeric(impvotes1$congressnumber)
votes<- read_dta("../GOVT 670/Important Congressional Votes, 1991-2020.dta")
votes
impvotes2<(as.numeric(impvotes1$strengthofbipartisanship))
impvotes2<-(as.numeric(impvotes1$strengthofbipartisanship))
impvotes2
impvotes2<-(as.numeric(impvotes1$strengthofbipartisanship), as.numeric(impvotes1$electionyear))
impvotes1$strengthofbipartisanship<- as.numeric(impvotes1$strengthofbipartisanship)
impvotes1$electionyear<- as.numeric(impvotes1$electionyear)
impvotes1$domesticpolicy<- as.numeric(impvotes1$domesticpolicy)
impvotes1$year<- as.numeric(impvotes1$year)
impvotes1$congressnumber<- as.numeric(impvotes1$congressnumber)
summary(impvotes1%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
impvotes1$strengthofbipartisanship
summary(impvotes1%>%
dplyr::select(strengthofbipartisanship, electionyear, domesticpolicy, year, congressnumber))
?superdiaga
?superdiag
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
avg.output
saveRDS(avg.output, file = "avg.output.for.table")
knitr::kable(avg.output,
digits = 3, caption = "Multiple Imputed Varying Intercepts Model, Abbreviated")
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(tidyverse))
suppressMessages(library(haven))
votes<- read_dta("../Data/Important Congressional Votes, 1991-2010.dta")
votes%>%
dplyr::select(year, democraticayes, democraticnays, republicanayes, republicannays, strengthofbipartisanship, strengthofconsensus, introducedbydemocrat, strongpolarization)%>%
summary()
ggplot(data=votes)+
geom_histogram(aes( x= strengthofbipartisanship))
votes<-votes%>%
filter(introducedbydemocrat!=2)
votes$introducedbydemocrat<- as.factor(votes$introducedbydemocrat)
drop_na(votes, strengthofbipartisanship)%>%
group_by(year)%>%
summarize(mean = mean(strengthofbipartisanship))%>%
ggplot()+
geom_line(aes(x= as.factor(year), y= mean), group= 1)+
geom_point(aes(x=as.factor(year), y=mean))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("Year")+ ylab("Average Strength of Bipartisanship")
anes<- read_dta("../../ANES_1948_2012.dta")
anes92_12<- anes%>%
filter(VCF0004 > 1990)
Rftd92_12<- anes92_12%>%
filter(is.na(VCF0218)== FALSE)%>%
filter(VCF0301 == 5| VCF0301 == 6 | VCF0301 == 7)%>%
group_by(VCF0004)%>%
summarise(mean = mean(VCF0218))%>%
rename("year" =VCF0004)
Dftr92_12<- anes92_12%>%
filter(is.na(VCF0224)== FALSE)%>%
filter(VCF0301 == 1| VCF0301 == 2 | VCF0301 == 3)%>%
group_by(VCF0004)%>%
summarise(mean = mean(VCF0224))%>%
rename("year" =VCF0004)
anes16<- read_dta("../Data/ANES_2016.dta")
Rftd16<- anes16%>%
filter(is.na(V161095)== FALSE)%>%
filter(V162279 == 5)%>%
summarise(mean = mean(V161095))
Rftd16$year<- 2016
Dftr16<- anes16%>%
filter(is.na(V161096)== FALSE)%>%
filter(V162279 == 1)%>%
summarise(mean = mean(V161096))
Dftr16$year<- 2016
anes20<-  read_dta("../Data/ANES_2020.dta")
Rftd20<- anes20%>%
filter(is.na(V201156)== FALSE)%>%
filter(V202429 == 5)%>%
summarise(mean = mean(V201156))
Rftd20$year<- 2020
Dftr20<- anes20%>%
filter(is.na(V201157)== FALSE)%>%
filter(V202429 == 1)%>%
summarise(mean = mean(V201157))
Dftr20$year<- 2020
RD1620<- rbind(Rftd16, Rftd20)
RthermD<- rbind(Rftd92_12, RD1620)
RthermD<- RthermD%>%
rename(RepFeelingThermDem = mean)
DR1620<- rbind(Dftr16, Dftr20)
DthermR<- rbind(Dftr92_12, DR1620)
DthermR<- DthermR%>%
rename(DemFeelingThermRep = mean)
RR92_12<- anes92_12%>%
filter(is.na(VCF0224)== FALSE)%>%
filter(VCF0301 == 5| VCF0301 == 6 | VCF0301 == 7)%>%
group_by(VCF0004)%>%
summarise(mean = mean(VCF0224))%>%
rename("year" =VCF0004)
RR16<-anes16%>%
filter(is.na(V161096)== FALSE)%>%
filter(V162279 == 5)%>%
summarise(mean = mean(V161096))
RR16$year<- 2016
RR20<- anes20%>%
filter(is.na(V201157)== FALSE)%>%
filter(V202429 == 5)%>%
summarise(mean = mean(V201157))
RR20$year<- 2020
RR1620<- rbind(RR16, RR20)
RthermR<- rbind(RR92_12, RR1620)
RthermR<- RthermR%>%
rename(RepFeelingThermRep = mean)
DD92_12<- anes92_12%>%
filter(is.na(VCF0218)== FALSE)%>%
filter(VCF0301 == 1| VCF0301 == 2 | VCF0301 == 3)%>%
group_by(VCF0004)%>%
summarise(mean = mean(VCF0218))%>%
rename("year" =VCF0004)
DD16<- anes16%>%
filter(is.na(V161095)== FALSE)%>%
filter(V162279 == 1)%>%
summarise(mean = mean(V161095))
DD16$year<- 2016
DD20<- anes20%>%
filter(is.na(V201156)== FALSE)%>%
filter(V202429 == 1)%>%
summarise(mean = mean(V201156))
DD20$year<- 2020
DD1620<- rbind(DD16, DD20)
DthermD<- rbind(DD92_12, DD1620)
DthermD<- DthermD%>%
rename(DemFeelingThermDem = mean)
feelingtherm<- cbind(RthermD, DthermR, RthermR, DthermD)[-c(3,5,7)]
feelingtherm
ggplot(data=feelingtherm)+
geom_line(aes(x=as.factor(year), y=RepFeelingThermDem), group =1)+
geom_point(aes(x=as.factor(year), y=RepFeelingThermDem))+
ylim(10,50)
ggplot(data=feelingtherm)+
geom_line(aes(x=as.factor(year), y=DemFeelingThermRep), group =1)+
geom_point(aes(x=as.factor(year), y=DemFeelingThermRep))+
ylim(10,50)
ggplot(data=feelingtherm)+
geom_line(aes(x=as.factor(year), y=RepFeelingThermRep), group =1)+
geom_point(aes(x=as.factor(year), y=RepFeelingThermRep))+
ylim(50,90)
ggplot(data=feelingtherm)+
geom_line(aes(x=as.factor(year), y=DemFeelingThermDem), group =1)+
geom_point(aes(x=as.factor(year), y=DemFeelingThermDem))+
ylim(50,90)
ggplot(data=feelingtherm)+
geom_line(aes(x=year, y=RepFeelingThermDem), color = "blue")+
geom_point(aes(x=year, y=RepFeelingThermDem))+
geom_line(aes(x=year, y=RepFeelingThermRep), color = "red")+
geom_point(aes(x=year, y=RepFeelingThermRep))+
ylab("Feeling Thermometer")+ xlab("Year") + ggtitle("Republican Citizens Feeling Thermometer on Both Parties 1992-2020")
ggplot(data=feelingtherm)+
geom_line(aes(x=year, y=DemFeelingThermDem), color = "blue")+
geom_point(aes(x=year, y=DemFeelingThermDem))+
geom_line(aes(x=year, y=DemFeelingThermRep), color = "red")+
geom_point(aes(x=year, y=DemFeelingThermRep))+
ylab("Feeling Thermometer")+ xlab("Year") + ggtitle("Democrat Citizens Feeling Thermometer on Both Parties 1992-2020")
ggplot(data=anes92_12)+
geom_histogram(aes(x= VCF0301), stat = "count", bins=20)+
ggtitle("Party Identification 1992-2012")+
xlab("Party Identification (7 point scale)")
ggplot(data=anes16)+
geom_histogram(aes(x= V162279))
ggplot(data=anes20)+
geom_histogram(aes(x= V202429))
strengthbip<- votes%>%
filter(is.na(strengthofbipartisanship) == FALSE)%>%
group_by(year)%>%
summarise(avgbip = 100*mean(strengthofbipartisanship))
DR<- left_join(DthermR, strengthbip, by = "year")
RD<- left_join(RthermD, strengthbip, by = "year")
summary(lm(DemFeelingThermRep~ avgbip, data = DR))
summary(lm(RepFeelingThermDem~ avgbip, data = RD))
ggplot(data= DR, aes(x= avgbip, y=DemFeelingThermRep))+
geom_point()+
geom_smooth(method = lm, se= FALSE)+
xlab("Average Strength of Bipartisanship in Congress")+ ylab("Democrat Citizen Feeling Thermometer on Republican Party")+
ggtitle("Correlation Between Bipartisanship and Feeling Thermometer")
ggplot(data= RD, aes(x= avgbip, y=RepFeelingThermDem))+
geom_point()+
geom_smooth(method = lm, se= FALSE)+
xlab("Average Strength of Bipartisanship in Congress")+ ylab("Republican Citizen Feeling Thermometer on Democratic Party")+
ggtitle("Correlation Between Bipartisanship and Feeling Thermometer")
binaryent1<- anes16%>%
filter(V162279 == 1| V162279 == 5)%>%
count(V162279)
binaryent2<- anes20%>%
filter(V202429 == 1| V202429 == 5)%>%
count(V202429)
cumulent<- anes92_12%>%
filter(VCF0301== 1| VCF0301== 2| VCF0301== 3| VCF0301== 4| VCF0301== 5| VCF0301== 6| VCF0301== 7)%>%
count(VCF0301)
cumulent<- anes%>%
filter(VCF0301== 1| VCF0301== 2| VCF0301== 3| VCF0301== 4| VCF0301== 5| VCF0301== 6| VCF0301== 7)%>%
group_by(VCF0004)%>%
count(VCF0301)
data.frame(n = binaryent1$n +binaryent2$n, party = c("Democrat", "Republican"))
1057+931+ 2321+2251
(1057+2321)/6560
(931+2251)/6560
p<- (1057+2321)/6560
q<- (931+2251)/6560
H<- 2^(-(p*log2(p) + q*log2(q))) -1
unique(cumulent$VCF0004)
H<- vector()
Ec<- vector()
for (i in 1:29){
yr<- unique(cumulent$VCF0004)[i]
df<- cumulent%>%
filter(VCF0004== yr)
for (k in 1:6){
t<- sum(df$n)
p<- sum(df$n[1:k])/t
q<- sum(df$n[(k+1):7])/t
H[k]<- 2^(-(p*log2(p) + q*log2(q))) -1
}
Ec[i]<- sum(H)/6
}
sum(H)/6
Ec
Ecdf<- data.frame(year = unique(cumulent$VCF0004), Ec = Ec )
df$n[1:1]
p
q
Ecdf[15:29,]
df<- cumulent%>%
filter(VCF0004== 2012)
# Entropy functions
# Input: a vector of proportions
entropy <- function (vec) {
p <- vec/sum(vec)
a <- log2(p)
a[a == -Inf] <- 0
e <- -1 * sum(p * a)
return(e)
}
# Input: a vector of proportions
cumEntropy <- function(vec){
l <- length(vec)
outEntropy <- 0
for (i in 1:(l-1)) {
doubleEntropy <- entropy(c(sum(vec[1:i]), sum(vec[(i+1):l])))^2
outEntropy <- outEntropy + doubleEntropy
}
return(outEntropy/(l-1))
}
entropy(df$n)
cumEntropy(df$n)
Ec<- vector()
for (i in 1:29){
yr<- unique(cumulent$VCF0004)[i]
df<- cumulent%>%
filter(VCF0004== yr)
Ec[i]<- cumEntropy(df$n)
}
Ec
cumEntropy
df
Ecdf
ggplot()+
geom_line(aes(x = unique(cumulent$VCF0004), y= Ec))
ggplot()+
geom_line(aes(x = unique(cumulent$VCF0004), y= as.factor(Ec)))
ggplot()+
geom_line(aes(x = as.factor(unique(cumulent$VCF0004)), y= Ec))
ggplot()+
geom_line(aes(x = as.factor(unique(cumulent$VCF0004)), y= Ec), group = 1)
Ec
ggplot()+
geom_line(aes(x = as.factor(unique(cumulent$VCF0004)), y= Ec), group = 1)
getwd()
setwd("~/GOVT 670/Congressional-Polarization")
getwd()
